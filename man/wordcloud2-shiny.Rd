% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/renderWordcloud2.R
\name{wordcloud2-shiny}
\alias{renderWordcloud2}
\alias{wordcloud2-shiny}
\alias{wordcloud2Output}
\title{Plot wordcloud2 in shiny}
\usage{
wordcloud2Output(outputId, width = "100\%", height = "400px")
renderWordcloud2(expr, env = parent.frame(), quoted = FALSE)

wordcloud2Output(outputId, width = "100\%", height = "400px")

renderWordcloud2(expr, env = parent.frame(), quoted = FALSE)
}
\arguments{
\item{outputId}{output variable to read from}

\item{width,height}{Must be a valid CSS unit (like \code{"100\%"},
\code{"400px"}, \code{"auto"}) or a number, which will be coerced to a
string and have \code{"px"} appended.}

\item{expr}{An expression that generates a networkD3 graph}

\item{env}{The environment in which to evaluate \code{expr}.}

\item{quoted}{Is \code{expr} a quoted expression (with \code{quote()})? This
  is useful if you want to save an expression in a variable.}
}
\description{
Function for plotting wordcloud2 in shiny
}
\details{
Use renderWordcloud2 to render an wordcloud2 object and use wordcloud2Output
output an wordcloud2 object. See more details in shiny package.
}
\examples{
if(require(shiny)){

  library(wordcloud2)
  # Global variables can go here
  n <- 1

  # Define the UI
  ui <- bootstrapPage(
     numericInput('size', 'Size of wordcloud', n),
    wordcloud2Output('wordcloud2')
  )


  # Define the server code
  server <- function(input, output) {
     output$wordcloud2 <- renderWordcloud2({
     # wordcloud2(demoFreqC, size=input$size)
       wordcloud2(demoFreq, size=input$size)
     })
  }
  # Return a Shiny app object
  # Sys.setlocale("LC_CTYPE","chs") #if you use Chinese character
  ## Do not Run!
  shinyApp(ui = ui, server = server)
  }
}

