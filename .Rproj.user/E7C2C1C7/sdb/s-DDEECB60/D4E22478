{
    "collab_server" : "",
    "contents" : "#' @import htmlwidgets\n#' @export\n# data = data.frame(name=c(\"New\",\"Old\"),\n#                   freq=c(100,30))\nwordcloud2 <- function(data, size = NULL,\n                       fontFamily = '\"Trebuchet MS\", \"Heiti TC\", \"Microsoft YaHei\", \"Arial Unicode MS\", \"Droid Fallback Sans\", sans-serif',\n                       fontWeight = 'normal',\n                       color =  'random-dark',\n                       minSize =  0,\n                       weightFactor = NULL,\n                       backgroundColor = \"white\",\n                       gridSize =  8,\n                       minRotation = -pi/2,\n                       maxRotation = pi/2,\n                       shuffle = TRUE,\n                       rotateRatio = 0.1,\n                       shape = 'circle',\n                       ellipticity = 0.65,\n                       drawMask = FALSE,\n                       maskColor =  'rgba(255,0,0,0.3)',\n                       maskGapWidth =  0.3\n\n                       ) {\n  if(class(data) ==\"table\"){\n    dataOut = data.frame(name = names(data),\n                         freq = as.vector(data))\n  }else{\n    data = as.data.frame(data)\n    dataOut = data[,1:2]\n    names(dataOut) = c(\"name\", \"freq\")\n  }\n\n\n  # create a list that contains the settings\n  if(is.null(weightFactor)){\n    weightFactor = 80/max(dataOut$freq)\n  }\n  settings <- list(\n    fontFamily = fontFamily,\n    fontWeight = fontWeight,\n    color =  color,\n    minSize =  minSize,\n    weightFactor = weightFactor,\n    backgroundColor = backgroundColor,\n    gridSize =  gridSize,\n    minRotation = minRotation,\n    maxRotation = maxRotation,\n    shuffle = shuffle,\n    rotateRatio = rotateRatio,\n    shape = shape,\n    ellipticity = ellipticity,\n    drawMask = drawMask,\n    maskColor =  maskColor,\n    maskGapWidth =  maskGapWidth\n  )\n  # pass the data and settings using 'x'\n  x <- list(\n    list = dataOut,\n    settings = settings\n  )\n  # create the widget\n  htmlwidgets::createWidget(\"wordcloud2\", x, width = size[1], height = size[2])\n}\n\n#'\n#' #' @export\n#' sigmaOutput <- function(outputId, width = \"100%\", height = \"400px\") {\n#'   htmlwidgets::shinyWidgetOutput(outputId, \"sigma\", width, height, package = \"sigma\")\n#' }\n#' #' @export\n#' renderSigma <- function(expr, env = parent.frame(), quoted = FALSE) {\n#' if (!quoted) { expr <- substitute(expr) } # force quoted\n#' htmlwidgets::shinyRenderWidget(expr, sigmaOutput, env, quoted = TRUE)\n#' }\n",
    "created" : 1464673070827.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3099074246",
    "id" : "D4E22478",
    "lastKnownWriteTime" : 1464683671,
    "last_content_update" : 1464683671552,
    "path" : "D:/personal1/wordcloud/wordcloud2/R/hello.R",
    "project_path" : "R/hello.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}